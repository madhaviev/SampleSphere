# This is the main configuration file for the application.
# ~~~~~

# Secret key
# ~~~~~
# The secret key is used to secure cryptographics functions.
# If you deploy your application to several instances be sure to use the same key!
application.secret="lk/[/mFc><QGh7GEv=pZSZTEkofAW@Mli;^h3R:Bg35M8c6`syofEVGP8Aqym=ge"

# The application languages
# ~~~~~
application.langs="en"


# Sphere
# ~~~~~
# Configuration of the Sphere SDK

# Main Sphere API endpoint:
sphere.core = "https://api.sphere.io"

# Sphere authorization service:
sphere.auth = "https://auth.sphere.io"

sphere.project = "sample-sphere-53"
sphere.project = ${?SPHERE_PROJECT_KEY}
sphere.clientId = "S5ISeYUe7LpeqzPV61shMYe5"
sphere.clientId = ${?SPHERE_CLIENT_ID}
sphere.clientSecret = "bpsq5xVtO3pq6jqgVWvFmPjeNieYVjgk"
sphere.clientSecret = ${?SPHERE_CLIENT_SECRET}

# Currency to use for shopping carts
sphere.cart.currency = "EUR"

# Inventory mode to use for shopping carts
sphere.cart.inventoryMode = "None"


# Global object class
# ~~~~~
# Define the Global object class for this application.
# Default to Global in the root package.
# application.global=Global

# Router
# ~~~~~
# Define the Router object to use for this application.
# This router will be looked up first when the application is starting up,
# so make sure this is the entry point.
# Furthermore, it's assumed your route file is named properly.
# So for an application router like `conf/my.application.Router`,
# you may need to define a router file `my.application.routes`.
# Default to Routes in the root package (and `conf/routes`)
# application.router=my.application.Routes

# Database configuration
# ~~~~~
# You can declare as many datasources as you want.
# By convention, the default datasource is named `default`
#
# db.default.driver=org.h2.Driver
# db.default.url="jdbc:h2:mem:play"
# db.default.user=sa
# db.default.password=""
#
# You can expose this datasource via JNDI if needed (Useful for JPA)
# db.default.jndiName=DefaultDS

# Evolutions
# ~~~~~
# You can disable evolutions if needed
# evolutionplugin=disabled

# Ebean configuration
# ~~~~~
# You can declare as many Ebean servers as you want.
# By convention, the default server is named `default`
#
# ebean.default="models.*"

# Logger
# ~~~~~
# You can also configure logback (http://logback.qos.ch/),
# by providing an application-logger.xml file in the conf directory.

# Root logger:
logger.root=DEBUG

# Logger used by the framework:
logger.play=DEBUG

# Logger provided to your application:
logger.application=DEBUG

